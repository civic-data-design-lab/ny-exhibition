@value palette: '../../styles/palette.module.css';
@value utils: '../../styles/utils.module.css';
@value typography: '../../styles/typography.module.css';
@value midGrey from palette;
@value resetBtn, smallHeight, bigHeight, maxBigHeight from utils;
@value v1Bold, s1Bold from typography;

.inner,
.textareaOutput,
.input,
.submitBtn {
  composes: v1Bold;
}

.zipErrorMessage {
  composes: s1Bold;
}

.inner {
  width: 100%;
  height: 100%;
}

.inner p {
  margin: 0;
}

.part1,
.part2 {
  width: 100%;
  height: 100%;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.form {
  flex-grow: 1;
}

.inner,
.inner input,
.inner textarea {
  color: white;
}

.input {
  background: transparent;
  box-shadow: none;
  border-radius: 0;
  padding: 2px 5px;
  border: none;
  border-bottom: 3px solid white;
}

.textarea {
  position: relative;
  overflow: hidden;
}

@value textareaHeight: 200px;

.textareaHint,
.textareaInput,
.textareaOutput {
  line-height: 40px;
}

.textareaHint span,
.textareaOutput span {
  padding-bottom: 3px;
}

.inner .textareaInput {
  border: 0;
  padding: 0;
  resize: none;
  width: 100%;
  height: textareaHeight;
  overflow: hidden;
  color: transparent;
  caret-color: white;
  outline-offset: -4px;
}

.textareaOutput {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: textareaHeight;
  pointer-events: none;
}

.textareaOutput span,
.textareaHint span {
  border-bottom: 3px solid white;
}

.textareaHint {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: textareaHeight;
  pointer-events: none;
  color: transparent;
}

.submitWrapper {
  text-align: center;
}

.submitBtn {
  composes: resetBtn;
  position: relative;
  font-size: 70%;
  opacity: 0.5;
  pointer-events: none;
  transition: 0.3s all ease-in-out;
}

.submitBtn.submitBtnBig {
  font-size: inherit;
  opacity: 1;
  pointer-events: auto;
}

/*
 * Part 1
 */
.part1 .form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/*
 * Part 2: ZIP
 */
.part2 {
  background: black;
}

.part2 .form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.zipField {
  margin-bottom: 40px;
  position: relative;
}

.zipErrorMessage {
  position: absolute;
  top: 100%;
  left: 0;
}

.zipInput {
  width: 140px;
}

.zipInput::-webkit-outer-spin-button,
.zipInput::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.zipInput[type='number'] {
  -moz-appearance: textfield;
}

.submitStatus {
  position: absolute;
  left: 0;
  top: 100%;
  width: 100%;
  padding: 20px;
  background: black;
}

.submitStatusMessage {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  background: black;
  border-radius: 11px;
}

.submitStatusMessage span {
  margin: auto;
}

@media only screen and (max-width: 768px) {
  .wrapper {
    position: relative;
    z-index: 1;
    height: 100%;
  }

  .modal {
    height: 100%;
  }

  .closeBtn {
    display: none;
  }

  .part1,
  .part2 {
    padding: 40px 40px;
  }

  .form {
    padding: 40px 0 0;
  }
}

@media only screen and (min-width: 769px) {
  .wrapper {
    position: fixed;
    top: 50%;
    left: 3px;
    transform: translate(0, -50%);
    height: bigHeight;
    max-height: maxBigHeight;
    right: 3px;
    background: rgba(255, 255, 255, 0.75);
    z-index: 2;
    overflow: hidden;
  }

  .modal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50%;
    height: 50%;
    min-width: 400px;
    min-height: 600px;
    max-width: 600px;
    max-height: 600px;
    z-index: 1;
  }

  .closeBtn {
    composes: resetBtn;
    display: block;
    width: 100%;
    height: 100%;
    background: transparent;
  }

  .inner {
    border-radius: 5px;
  }

  .part1,
  .part2 {
    border-radius: 11px;
    padding: 30px 30px 24px;
  }

  .form {
    padding: 30px 0 0;
  }
}
